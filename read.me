Para trabajar con Dijkstra:
    -Primero debemos hacer una tranformación de los datos para poder calcular con Dijkstra
    -Convertidos los datos de Networkx que son las aristas con pesos ("A", "B", 4),a un diccionario de los Nodos
    con sus vecinos y pesos ('A': {'B': 4},'B': {'A': 4}).
    -Luego utilizamos el diccionario de nodos con sus vecinos y pesos junto con una cola de prioridad (heapq) 
    para calcular el camino mas corto usando dijkstra

Para utilizar ping y el traceroute 
    -La ejecución de este codigo debe ser desde una terminar con privilegios de administrador como el CMD ejecutado
    como administrador, ya que las funciones necesarias para hacer ping y traceroute cuentan con restriccines para su uso.
    -En el CMD debemos colocarnos en la ubicación del proyecto.
    -Debemos activar el enviroment de python con el comando: .\.venv\Scripts\Activate
    -Ejecutamos el codigo con el comando: python ping-codigo.py
    -Dentro de la ejecución del programa indicamos la ruta a la cual hacer el ping/traceroute (eje: google.com).

Para simular el enrutamiento utilizando RIP (Routing Information Protocol)
    -Se crean los routers con un nombre y una tabla de rutas vacia.
    -Se agregan rutas directas entre los routers, agregando una ruta directa con peso 1.
    -Luego se inicia la iteración para calcular el costo de las rutas.
    -Para cada entrada (destino y su costo en el vecino), se suma 1 (que representa el costo de la conexión directa) y se verifica si:
        El destino no existe aún en la tabla actual.
        O bien, el costo actual es mayor que el costo calculado (costo del vecino + 1).
        Si alguna de estas condiciones se cumple, se actualiza la tabla del router con la nueva ruta y costo.
    -En cierta iteración los datos se estibilizan y se mantienen de esa manera al encontrar el mejor camino.